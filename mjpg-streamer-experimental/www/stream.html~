<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN"
"http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en">
  <head>
    <title>PS42 Stream</title>
    <meta http-equiv="content-type" content="text/html; charset=iso-8859-1" />
    <link rel="stylesheet" href="style.css" type="text/css" />
    <script type="text/javascript" src="jquery.js"></script>    
    <script type="text/javascript" src="./jsfeat.js"></script>    
    <script type="text/javascript" src="jquery.rotate.js"></script>
    <script src="./jquery.min.js" type="text/javascript"></script> 
    <script src="./skulpt.min.js" type="text/javascript"></script> 
    <script src="./skulpt-stdlib.js" type="text/javascript"></script> 
    <link rel="stylesheet" href="jquery.checkbox.css" />
		<link rel="stylesheet" href="jquery.safari-checkbox.css" />
		<script type="text/javascript" src="jquery.js"></script>
		<script type="text/javascript" src="jquery.checkbox.min.js"></script>
		<script type="text/javascript">
			$(document).ready(function() {
				$('input:checkbox:not([safari])').checkbox();
				$('input[safari]:checkbox').checkbox({cls:'jquery-safari-checkbox'});
				$('input:radio').checkbox();
			});

			displayForm = function (elementId)
			{
				var content = [];
				$('#' + elementId + ' input').each(function(){
					var el = $(this);
					if ( (el.attr('type').toLowerCase() == 'radio'))
					{
						if ( this.checked )
							content.push([
								'"', el.attr('name'), '": ',
								'value="', ( this.value ), '"',
								( this.disabled ? ', disabled' : '' )
							].join(''));
					}
					else
						content.push([
							'"', el.attr('name'), '": ',
							( this.checked ? 'checked' : 'not checked' ), 
							( this.disabled ? ', disabled' : '' )
						].join(''));
				});
				alert(content.join('\n'));
			}
			
			changeStyle = function(skin)
			{
				jQuery('#myform :checkbox').checkbox((skin ? {cls: skin} : {}));
			}
			
			
		</script>
		
    <!--[if IE 6]>
    <link rel="stylesheet" href="fix.css" type="text/css" />
    <![endif]-->
    <script type="text/javascript">
    
    var phi = 0, flipped = 0, mirrored = 0;

	function toggleCheckbox(id)
 	{
		var e = document.getElementById(id);
		if(e.style.display == 'none')
          		e.style.display = 'block';
       		else
          		e.style.display = 'none';
 	}
	
 
	function setXformClass () {
		$('.xform').each(function(idx,el) {
			el.className = "xform x" +(flipped ? "-flipped":"") + (mirrored ? "-mirrored" : "") + "-rotated-" + phi;
		});
	}
    $(document).ready(function() {
		// set rotation angle phi and toggle rotate class
		$('#rotate').click(function() {
			phi = (phi + 90) % 360;
			setXformClass();
			if (phi % 180) {
				$('.xform-p').addClass('rotated');
			} else {
				$('.xform-p').removeClass('rotated');
			}
		});
		// toggle mirror class component
		$('#mirror').click(function() {
			mirrored = ! mirrored;
			setXformClass();
		});
		// toggle flip class component
		$('#flip').click(function() {
			flipped = ! flipped;
			setXformClass();
		});
	});
	</script>
	<style type="text/css">
body, html { padding: 0px; margin: 0px; background: #ccc; font-family: Arial;font-size: 13px;}
h1 {margin: 20px 0 0 0;padding: 0;color: #09f;font-size: 28px; text-align: center;font-weight: bold;}
h2 {margin: 25px 0 0 0;padding: 0;font-size: 20px;}
h3 {margin: 25px 0 0 0;padding: 0;font-size: 16px;}
p {clear: both;vertical-align: middle;font-size: 13px;margin: 10px 0 0 0;padding: 0;}
pre { display: block;margin: 0px;padding: 2px 2px 2px 2px; border: 1px solid #888; background: #ccc;}
code { display: block;margin: 0px;padding: 2px 2px 2px 20px;border: 1px solid #888;background: #fff;}
.hr { clear: both;margin: 20px 0 20px 0;font-size: 2px;line-height: 2px;background: #ccc;border: 1px solid #888;height: 2px;display: block;}
table {font-size: 13px;}
a {color: #069;}
a:hover{color: #e30;}
a.code{display: block;float:left;clear:both;padding: 2px 0px;}
label { cursor: hand; cursor: pointer;}
		</style>
  </head>

  <body onload="runit();">
	<script type="text/javascript">
	function outf(text) { 
	      var mypre = document.getElementById("output"); 
	      mypre.innerHTML = mypre.innerHTML + text; 
	  } 
	  function builtinRead(x) {
	      if (Sk.builtinFiles === undefined || Sk.builtinFiles["files"][x] === undefined)
        	      throw "File not found: '" + x + "'";
	      return Sk.builtinFiles["files"][x];
	  }

	  // Here's everything you need to run a python program in skulpt
	  // grab the code from your textarea
	  // get a reference to your pre element for output
	  // configure the output function
	  // call Sk.importMainWithBody()
	  function runit() { 
		var prog = document.getElementById("yourcode").value;
		var output = document.getElementById("output");
		output.innerHTML = '';
		Sk.configure({output:outf, read:builtinRead});
	      	(Sk.TurtleGraphics || (Sk.TurtleGraphics = {})).target = 'mycanvas';
		try {
			
		   module = Sk.importMainWithBody("<stdin>", false, prog);
		} catch (e) {
		    alert(e);
		}
	    
	  } 
	  function updateHead()
	{
	    var prog = document.getElementById("yourcode").value;
            var val = document.getElementById("yaw").textContent;
	    var obj = module.tp$getattr('Test');
	    var runMethod = obj.tp$getattr('head');
	    Sk.misceval.callsim(runMethod, Number(val));
		
	}
	function updatePos()
	{
	    var prog = document.getElementById("yourcode").value;
            var val = document.getElementById("inches").textContent;
	    var obj = module.tp$getattr('Test');
	    var runMethod = obj.tp$getattr('dist');
	    Sk.misceval.callsim(runMethod, Number(val));

		
	}
	function markPoint()
	{
	    var prog = document.getElementById("yourcode").value;
	    var obj = module.tp$getattr('Test');
	    var runMethod = obj.tp$getattr('run');
	    var ret = Sk.misceval.callsim(runMethod);
	    alert(ret);
		
	}	
	</script>
    <div id="sidebar">
      <h1>WeGo Moore - Project NEMO</h1>
      <h2>PS42 Live Video Stream</h2>

      <div id="menu">
        <a href="index.html">Home</a>
        <a href="static.html">Static</a> 
        <a class="active" href="stream.html">Stream</a> 
      </div>

    </div>

    <div id="content">
      <h1>Stream</h1>
      <h2>Display the stream</h2>
	
	<div class="imgHolder">
    		<img id="streamimage" class="xform" src="/?action=stream" />
    		<temp id="temp">Temp: XX</temp>
		<humidity id="hum">Humidity: XX</humidity>
		<depth id="dep">Depth: XX</depth>
		<battery id="batt">Battery: XX</battery>
		<heading id="head">Heading: XX</heading>
		<bot>.</bot>
		<div class="imu">
			<roll id="roll">Roll: XX</roll>
			<pitch id="pitch">Pitch: XX</pitch>
			<yaw id="yaw">00</yaw>
			<inches id="inches" hidden>79</inches>
		</div>
	</div>
	
	</br>
	<button type="button" onclick="runit()">Run</button> 
	
	
	<form id="myform" action="javascript:alert();">
			<table cellspacing="5">
				<tr><th>&nbsp;</th><th>Metadata</th></tr>
				<tr><td><input type="checkbox" name="checkbox[]" class="top5" onchange="toggleCheckbox('temp')" checked/></td><td>Temperature</td>
				<td><input type="checkbox" name="checkbox[]" class="top5" onchange="toggleCheckbox('hum')" checked/></td><td>Humidity</td></tr>
				<tr><td><input type="checkbox" name="checkbox[]" class="top5" onchange="toggleCheckbox('dep')" checked/></td><td>Depth</td>
				<td><input type="checkbox" name="checkbox[]" class="top5" onchange="toggleCheckbox('batt')" checked/></td><td>Battery</td></tr>
				<tr><td><input type="checkbox" name="checkbox[]" class="top5" onchange="toggleCheckbox('head')" checked/></td><td>Heading</td>
				<td><input type="checkbox" name="checkbox[]" class="top5" onchange="toggleCheckbox('roll')" checked/></td><td>Roll</td></tr>
				<tr><td><input type="checkbox" name="checkbox[]" class="top5" onchange="toggleCheckbox('pitch')" checked/></td><td>Pitch</td>
				<td><input type="checkbox" name="checkbox[]" class="top5" onchange="toggleCheckbox('yaw')" checked/></td><td>Yaw</td></tr>
			</table>
		</form>
	<pre id="output"></pre>
	<div id="mycanvas"></div> 
	<textarea hidden id="yourcode" cols="40" rows="10">
import turtle, time, math
ps42 = turtle.Turtle()

class Test:

     def head(ang1):
         ang = int(ang1)
         ang = ang * math.pi/180;
         ps42.setheading(math.degrees(ang))
         return ps42

     def dist(dist1):
         dist = int(dist1)
         ps42.fd(dist)

     def run():
         return ps42.position()

a = Test()


</textarea><br /> 
	</div>
	
	
	<script src="https://cdn.socket.io/socket.io-1.2.0.js"></script>
    		<script src="http://code.jquery.com/jquery-1.11.1.js"></script>
    		<script>
    		  var socket = io('http://192.168.1.206:8888');
		  
		  socket.emit('chat message', 't');
      		  socket.on('arduino', function(msg){
		  	
		  	var msg_arr = msg.split(", ");
			var temp1 = msg_arr[0].split(" : ");
       		  	document.getElementById("temp").innerHTML = "Temp: ".concat(temp1[1]);
			var dep1 = msg_arr[1].split(" : ")
       		  	document.getElementById("dep").innerHTML = "Depth: ".concat(dep1[1]);
			var hum1 = msg_arr[2].split(" : ")
       		  	document.getElementById("hum").innerHTML = "Humidity: ".concat(hum1[1]);
			var temp1 = msg_arr[3].split(" : ");
       		  	document.getElementById("temp").innerHTML = "Temp: ".concat(temp1[1]);
       		  	var inches = msg_arr[4].split(" : ");
       		  	document.getElementById("inches").innerHTML = temp1[1];
			updatePos();
			
     		  });
		  socket.on('mav', function(msg){
		  	var msg_arr = msg.split(", ");
			var batt1 = msg_arr[0].split(" : ");
       		  	document.getElementById("batt").innerHTML = "Battery: ".concat(batt1[1]);
			var head1 = msg_arr[1].split(" : ")
       		  	document.getElementById("head").innerHTML = "Heading: ".concat(head1[1]);
			var roll1 = msg_arr[2].split(" : ");
       		  	document.getElementById("roll").innerHTML = "Roll: ".concat(roll1[1]);
			var pitch1 = msg_arr[3].split(" : ");
       		  	document.getElementById("pitch").innerHTML = "Pitch: ".concat(pitch1[1]);
			var yaw1 = msg_arr[4].split(" : ");
       		  	document.getElementById("yaw").innerHTML = "Yaw: ".concat(yaw1[1]);
			updateHead();
			
     		  });
    		</script>
	
  </body>
</html>
